
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESleftDIVleftEQNELELTGTGEleftORANDAND ARRAY BEGIN CCONST CHAR COLEQ COLON COMMA DIV DOT DOWNTO ELSE ELSIF END ENDIF ENDLOOP EQ FOR FUNCTION GE GT ICONST ID IF INTEGER LE LOOP LPAREN LT MINUS NE NOT OF OR PLUS PROCEDURE PROGRAM RECORD REPEAT RETURN RPAREN SCONST SEMI STRING THEN TIMES TO TYPE UNTIL VAR WHILEprogram : header SEMI block DOT\n\t| statement_sequence\n\theader : PROGRAM identifierblock : variable_declaration_part procedure_or_function statement_part\n\tvariable_declaration_part : VAR variable_declaration_list\n\t |\n\tvariable_declaration_list : variable_declaration variable_declaration_list\n\t | variable_declaration\n\tvariable_declaration : variable_identifier COLON type SEMIvariable_identifier : identifier COMMA variable_identifier\n\t| identifierprocedure_or_function : proc_or_func_declaration SEMI procedure_or_function\n\t\t|  proc_or_func_declaration : procedure_declaration\n               | function_declaration procedure_declaration : procedure_heading SEMI block procedure_heading : PROCEDURE identifier\n\t| PROCEDURE identifier LPAREN parameter_list RPAREN function_declaration : function_heading SEMI block function_heading : FUNCTION type\n\t \t| FUNCTION identifier COLON type\n\t\t| FUNCTION identifier LPAREN parameter_list RPAREN COLON type parameter_list : parameter COMMA parameter_list\n\t| parameter parameter : identifier COLON type type : STRING\n\t| INTEGER\n\t| CHAR\n\tstatement_part : BEGIN statement_sequence ENDstatement_sequence : statement SEMI statement_sequence\n\t | statementstatement : assignment_statement\n\t | statement_part\n\t | if_statement\n\t | while_statement\n\t | repeat_statement\n\t | for_statement\n\t | procedure_or_function_call\n\t |\n\t procedure_or_function_call : identifier LPAREN param_list RPAREN\n\t| identifier  param_list : param_list COMMA param\n\t | param  param : expression if_statement : IF expression THEN statement ELSE statement ENDIF\n\t| IF expression THEN statement ELSIF statement ENDIF\n\t| IF expression THEN statement ENDIF\n\twhile_statement : WHILE expression LOOP statement ENDLOOPrepeat_statement : REPEAT statement UNTIL expressionfor_statement : FOR assignment_statement TO expression LOOP statement ENDLOOP\n\t| FOR assignment_statement DOWNTO expression LOOP statement ENDLOOP\n\tassignment_statement : identifier COLEQ expressionexpression : expression and_or expression_m\n\t| expression_m\n\t expression_m : expression_s\n\t| expression_m sign expression_s expression_s : element\n\t| expression_s psign element and_or : AND\n\t| OR psign : TIMES\n\t| DIVsign : PLUS\n\t| MINUS\n\t| EQ\n\t| NE\n\t| LT\n\t| LE\n\t| GT\n\t| GE\n\telement : identifier\n\t| integer\n\t| string\n\t| char\n\t| LPAREN expression RPAREN\n\t| NOT element\n\t identifier : ID  integer : ICONST  string : SCONST  char : CCONST '
    
_lr_action_items = {'PROGRAM':([0,],[4,]),'SEMI':([0,2,5,6,7,8,9,10,11,12,13,14,19,21,24,27,28,29,30,31,32,33,36,37,38,46,51,69,76,77,78,79,80,87,90,91,92,93,95,98,102,103,105,106,107,113,115,119,120,124,133,136,137,138,139,141,147,],[-39,20,-41,24,-32,-33,-34,-35,-36,-37,-38,-39,-77,-3,-39,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,-52,-29,-76,99,-14,-15,100,101,-40,-53,-56,-58,-75,-49,-4,-17,-20,-26,-27,-28,-47,-48,-16,-19,135,-21,-45,-46,-50,-51,-18,-22,]),'$end':([0,1,3,5,6,7,8,9,10,11,12,13,19,24,27,28,29,30,31,32,33,36,37,38,46,50,51,69,74,87,90,91,92,93,95,113,115,136,137,138,139,],[-39,0,-2,-41,-31,-32,-33,-34,-35,-36,-37,-38,-77,-39,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,-52,-30,-29,-76,-1,-40,-53,-56,-58,-75,-49,-47,-48,-45,-46,-50,-51,]),'BEGIN':([0,14,17,20,24,44,52,70,75,83,84,99,100,101,108,112,114,116,117,118,135,],[14,14,14,-6,14,-13,14,14,14,-5,-8,-13,-6,-6,-7,14,14,14,14,-12,-9,]),'IF':([0,14,17,24,52,70,112,114,116,117,],[15,15,15,15,15,15,15,15,15,15,]),'WHILE':([0,14,17,24,52,70,112,114,116,117,],[16,16,16,16,16,16,16,16,16,16,]),'REPEAT':([0,14,17,24,52,70,112,114,116,117,],[17,17,17,17,17,17,17,17,17,17,]),'FOR':([0,14,17,24,52,70,112,114,116,117,],[18,18,18,18,18,18,18,18,18,18,]),'ID':([0,4,14,15,16,17,18,22,23,24,34,35,45,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,81,82,84,88,110,112,114,116,117,121,123,135,142,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-59,-60,19,-63,-64,-65,-66,-67,-68,-69,-70,19,-61,-62,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-9,19,]),'COLEQ':([5,19,42,],[22,-77,22,]),'LPAREN':([5,15,16,19,22,23,34,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,72,73,88,102,104,],[23,34,34,-77,34,34,34,34,34,-59,-60,34,-63,-64,-65,-66,-67,-68,-69,-70,34,-61,-62,34,34,34,34,121,123,]),'END':([5,6,7,8,9,10,11,12,13,14,19,24,25,27,28,29,30,31,32,33,36,37,38,46,50,51,69,87,90,91,92,93,95,113,115,136,137,138,139,],[-41,-31,-32,-33,-34,-35,-36,-37,-38,-39,-77,-39,51,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,-52,-30,-29,-76,-40,-53,-56,-58,-75,-49,-47,-48,-45,-46,-50,-51,]),'UNTIL':([5,7,8,9,10,11,12,13,17,19,27,28,29,30,31,32,33,36,37,38,40,46,51,69,87,90,91,92,93,95,113,115,136,137,138,139,],[-41,-32,-33,-34,-35,-36,-37,-38,-39,-77,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,71,-52,-29,-76,-40,-53,-56,-58,-75,-49,-47,-48,-45,-46,-50,-51,]),'ELSE':([5,7,8,9,10,11,12,13,19,27,28,29,30,31,32,33,36,37,38,46,51,52,69,87,89,90,91,92,93,95,113,115,136,137,138,139,],[-41,-32,-33,-34,-35,-36,-37,-38,-77,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,-52,-29,-39,-76,-40,112,-53,-56,-58,-75,-49,-47,-48,-45,-46,-50,-51,]),'ELSIF':([5,7,8,9,10,11,12,13,19,27,28,29,30,31,32,33,36,37,38,46,51,52,69,87,89,90,91,92,93,95,113,115,136,137,138,139,],[-41,-32,-33,-34,-35,-36,-37,-38,-77,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,-52,-29,-39,-76,-40,114,-53,-56,-58,-75,-49,-47,-48,-45,-46,-50,-51,]),'ENDIF':([5,7,8,9,10,11,12,13,19,27,28,29,30,31,32,33,36,37,38,46,51,52,69,87,89,90,91,92,93,95,112,113,114,115,126,127,136,137,138,139,],[-41,-32,-33,-34,-35,-36,-37,-38,-77,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,-52,-29,-39,-76,-40,113,-53,-56,-58,-75,-49,-39,-47,-39,-48,136,137,-45,-46,-50,-51,]),'ENDLOOP':([5,7,8,9,10,11,12,13,19,27,28,29,30,31,32,33,36,37,38,46,51,69,70,87,90,91,92,93,94,95,113,115,116,117,128,129,136,137,138,139,],[-41,-32,-33,-34,-35,-36,-37,-38,-77,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,-52,-29,-76,-39,-40,-53,-56,-58,-75,115,-49,-47,-48,-39,-39,138,139,-45,-46,-50,-51,]),'NOT':([15,16,22,23,34,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,72,73,88,],[35,35,35,35,35,35,35,-59,-60,35,-63,-64,-65,-66,-67,-68,-69,-70,35,-61,-62,35,35,35,35,]),'ICONST':([15,16,22,23,34,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,72,73,88,],[36,36,36,36,36,36,36,-59,-60,36,-63,-64,-65,-66,-67,-68,-69,-70,36,-61,-62,36,36,36,36,]),'SCONST':([15,16,22,23,34,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,72,73,88,],[37,37,37,37,37,37,37,-59,-60,37,-63,-64,-65,-66,-67,-68,-69,-70,37,-61,-62,37,37,37,37,]),'CCONST':([15,16,22,23,34,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,72,73,88,],[38,38,38,38,38,38,38,-59,-60,38,-63,-64,-65,-66,-67,-68,-69,-70,38,-61,-62,38,38,38,38,]),'TIMES':([19,28,29,30,31,32,33,36,37,38,69,91,92,93,],[-77,66,-57,-71,-72,-73,-74,-78,-79,-80,-76,66,-58,-75,]),'DIV':([19,28,29,30,31,32,33,36,37,38,69,91,92,93,],[-77,67,-57,-71,-72,-73,-74,-78,-79,-80,-76,67,-58,-75,]),'PLUS':([19,27,28,29,30,31,32,33,36,37,38,69,90,91,92,93,],[-77,57,-55,-57,-71,-72,-73,-74,-78,-79,-80,-76,57,-56,-58,-75,]),'MINUS':([19,27,28,29,30,31,32,33,36,37,38,69,90,91,92,93,],[-77,58,-55,-57,-71,-72,-73,-74,-78,-79,-80,-76,58,-56,-58,-75,]),'EQ':([19,27,28,29,30,31,32,33,36,37,38,69,90,91,92,93,],[-77,59,-55,-57,-71,-72,-73,-74,-78,-79,-80,-76,59,-56,-58,-75,]),'NE':([19,27,28,29,30,31,32,33,36,37,38,69,90,91,92,93,],[-77,60,-55,-57,-71,-72,-73,-74,-78,-79,-80,-76,60,-56,-58,-75,]),'LT':([19,27,28,29,30,31,32,33,36,37,38,69,90,91,92,93,],[-77,61,-55,-57,-71,-72,-73,-74,-78,-79,-80,-76,61,-56,-58,-75,]),'LE':([19,27,28,29,30,31,32,33,36,37,38,69,90,91,92,93,],[-77,62,-55,-57,-71,-72,-73,-74,-78,-79,-80,-76,62,-56,-58,-75,]),'GT':([19,27,28,29,30,31,32,33,36,37,38,69,90,91,92,93,],[-77,63,-55,-57,-71,-72,-73,-74,-78,-79,-80,-76,63,-56,-58,-75,]),'GE':([19,27,28,29,30,31,32,33,36,37,38,69,90,91,92,93,],[-77,64,-55,-57,-71,-72,-73,-74,-78,-79,-80,-76,64,-56,-58,-75,]),'THEN':([19,26,27,28,29,30,31,32,33,36,37,38,69,90,91,92,93,],[-77,52,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,-76,-53,-56,-58,-75,]),'AND':([19,26,27,28,29,30,31,32,33,36,37,38,39,46,49,68,69,90,91,92,93,95,96,97,],[-77,54,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,54,54,54,54,-76,-53,-56,-58,-75,54,54,54,]),'OR':([19,26,27,28,29,30,31,32,33,36,37,38,39,46,49,68,69,90,91,92,93,95,96,97,],[-77,55,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,55,55,55,55,-76,-53,-56,-58,-75,55,55,55,]),'LOOP':([19,27,28,29,30,31,32,33,36,37,38,39,69,90,91,92,93,96,97,],[-77,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,70,-76,-53,-56,-58,-75,116,117,]),'TO':([19,27,28,29,30,31,32,33,36,37,38,41,46,69,90,91,92,93,],[-77,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,72,-52,-76,-53,-56,-58,-75,]),'DOWNTO':([19,27,28,29,30,31,32,33,36,37,38,41,46,69,90,91,92,93,],[-77,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,73,-52,-76,-53,-56,-58,-75,]),'RPAREN':([19,27,28,29,30,31,32,33,36,37,38,47,48,49,68,69,90,91,92,93,105,106,107,111,131,132,134,144,145,],[-77,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,87,-43,-44,93,-76,-53,-56,-58,-75,-26,-27,-28,-42,141,-24,143,-25,-23,]),'COMMA':([19,27,28,29,30,31,32,33,36,37,38,47,48,49,69,86,90,91,92,93,105,106,107,111,132,144,],[-77,-54,-55,-57,-71,-72,-73,-74,-78,-79,-80,88,-43,-44,-76,110,-53,-56,-58,-75,-26,-27,-28,-42,142,-25,]),'COLON':([19,85,86,104,125,130,143,],[-77,109,-11,122,-10,140,146,]),'VAR':([20,100,101,],[45,45,45,]),'PROCEDURE':([20,44,83,84,99,100,101,108,135,],[-6,81,-5,-8,81,-6,-6,-7,-9,]),'FUNCTION':([20,44,83,84,99,100,101,108,135,],[-6,82,-5,-8,82,-6,-6,-7,-9,]),'DOT':([43,51,98,],[74,-29,-4,]),'STRING':([82,109,122,140,146,],[105,105,105,105,105,]),'INTEGER':([82,109,122,140,146,],[106,106,106,106,106,]),'CHAR':([82,109,122,140,146,],[107,107,107,107,107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'header':([0,],[2,]),'statement_sequence':([0,14,24,],[3,25,50,]),'identifier':([0,4,14,15,16,17,18,22,23,24,34,35,45,52,53,56,65,70,71,72,73,81,82,84,88,110,112,114,116,117,121,123,142,],[5,21,5,30,30,5,42,30,30,5,30,30,86,5,30,30,30,5,30,30,30,102,104,86,30,86,5,5,5,5,130,130,130,]),'statement':([0,14,17,24,52,70,112,114,116,117,],[6,6,40,6,89,94,126,127,128,129,]),'assignment_statement':([0,14,17,18,24,52,70,112,114,116,117,],[7,7,7,41,7,7,7,7,7,7,7,]),'statement_part':([0,14,17,24,52,70,75,112,114,116,117,],[8,8,8,8,8,8,98,8,8,8,8,]),'if_statement':([0,14,17,24,52,70,112,114,116,117,],[9,9,9,9,9,9,9,9,9,9,]),'while_statement':([0,14,17,24,52,70,112,114,116,117,],[10,10,10,10,10,10,10,10,10,10,]),'repeat_statement':([0,14,17,24,52,70,112,114,116,117,],[11,11,11,11,11,11,11,11,11,11,]),'for_statement':([0,14,17,24,52,70,112,114,116,117,],[12,12,12,12,12,12,12,12,12,12,]),'procedure_or_function_call':([0,14,17,24,52,70,112,114,116,117,],[13,13,13,13,13,13,13,13,13,13,]),'expression':([15,16,22,23,34,71,72,73,88,],[26,39,46,49,68,95,96,97,49,]),'expression_m':([15,16,22,23,34,53,71,72,73,88,],[27,27,27,27,27,90,27,27,27,27,]),'expression_s':([15,16,22,23,34,53,56,71,72,73,88,],[28,28,28,28,28,28,91,28,28,28,28,]),'element':([15,16,22,23,34,35,53,56,65,71,72,73,88,],[29,29,29,29,29,69,29,29,92,29,29,29,29,]),'integer':([15,16,22,23,34,35,53,56,65,71,72,73,88,],[31,31,31,31,31,31,31,31,31,31,31,31,31,]),'string':([15,16,22,23,34,35,53,56,65,71,72,73,88,],[32,32,32,32,32,32,32,32,32,32,32,32,32,]),'char':([15,16,22,23,34,35,53,56,65,71,72,73,88,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'block':([20,100,101,],[43,119,120,]),'variable_declaration_part':([20,100,101,],[44,44,44,]),'param_list':([23,],[47,]),'param':([23,88,],[48,111,]),'and_or':([26,39,46,49,68,95,96,97,],[53,53,53,53,53,53,53,53,]),'sign':([27,90,],[56,56,]),'psign':([28,91,],[65,65,]),'procedure_or_function':([44,99,],[75,118,]),'proc_or_func_declaration':([44,99,],[76,76,]),'procedure_declaration':([44,99,],[77,77,]),'function_declaration':([44,99,],[78,78,]),'procedure_heading':([44,99,],[79,79,]),'function_heading':([44,99,],[80,80,]),'variable_declaration_list':([45,84,],[83,108,]),'variable_declaration':([45,84,],[84,84,]),'variable_identifier':([45,84,110,],[85,85,125,]),'type':([82,109,122,140,146,],[103,124,133,144,147,]),'parameter_list':([121,123,142,],[131,134,145,]),'parameter':([121,123,142,],[132,132,132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> header SEMI block DOT','program',4,'p_program_start','rules.py',18),
  ('program -> statement_sequence','program',1,'p_program_start','rules.py',19),
  ('header -> PROGRAM identifier','header',2,'p_header','rules.py',28),
  ('block -> variable_declaration_part procedure_or_function statement_part','block',3,'p_block','rules.py',33),
  ('variable_declaration_part -> VAR variable_declaration_list','variable_declaration_part',2,'p_variable_declaration_part','rules.py',39),
  ('variable_declaration_part -> <empty>','variable_declaration_part',0,'p_variable_declaration_part','rules.py',40),
  ('variable_declaration_list -> variable_declaration variable_declaration_list','variable_declaration_list',2,'p_variable_declaration_list','rules.py',47),
  ('variable_declaration_list -> variable_declaration','variable_declaration_list',1,'p_variable_declaration_list','rules.py',48),
  ('variable_declaration -> variable_identifier COLON type SEMI','variable_declaration',4,'p_variable_declaration','rules.py',58),
  ('variable_identifier -> identifier COMMA variable_identifier','variable_identifier',3,'p_variable_identifier','rules.py',62),
  ('variable_identifier -> identifier','variable_identifier',1,'p_variable_identifier','rules.py',63),
  ('procedure_or_function -> proc_or_func_declaration SEMI procedure_or_function','procedure_or_function',3,'p_procedure_or_function','rules.py',70),
  ('procedure_or_function -> <empty>','procedure_or_function',0,'p_procedure_or_function','rules.py',71),
  ('proc_or_func_declaration -> procedure_declaration','proc_or_func_declaration',1,'p_proc_or_func_declaration','rules.py',78),
  ('proc_or_func_declaration -> function_declaration','proc_or_func_declaration',1,'p_proc_or_func_declaration','rules.py',79),
  ('procedure_declaration -> procedure_heading SEMI block','procedure_declaration',3,'p_procedure_declaration','rules.py',84),
  ('procedure_heading -> PROCEDURE identifier','procedure_heading',2,'p_procedure_heading','rules.py',89),
  ('procedure_heading -> PROCEDURE identifier LPAREN parameter_list RPAREN','procedure_heading',5,'p_procedure_heading','rules.py',90),
  ('function_declaration -> function_heading SEMI block','function_declaration',3,'p_function_declaration','rules.py',99),
  ('function_heading -> FUNCTION type','function_heading',2,'p_function_heading','rules.py',104),
  ('function_heading -> FUNCTION identifier COLON type','function_heading',4,'p_function_heading','rules.py',105),
  ('function_heading -> FUNCTION identifier LPAREN parameter_list RPAREN COLON type','function_heading',7,'p_function_heading','rules.py',106),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','rules.py',116),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','rules.py',117),
  ('parameter -> identifier COLON type','parameter',3,'p_parameter','rules.py',125),
  ('type -> STRING','type',1,'p_type','rules.py',130),
  ('type -> INTEGER','type',1,'p_type','rules.py',131),
  ('type -> CHAR','type',1,'p_type','rules.py',132),
  ('statement_part -> BEGIN statement_sequence END','statement_part',3,'p_statement_part','rules.py',138),
  ('statement_sequence -> statement SEMI statement_sequence','statement_sequence',3,'p_statement_sequence','rules.py',143),
  ('statement_sequence -> statement','statement_sequence',1,'p_statement_sequence','rules.py',144),
  ('statement -> assignment_statement','statement',1,'p_statement','rules.py',152),
  ('statement -> statement_part','statement',1,'p_statement','rules.py',153),
  ('statement -> if_statement','statement',1,'p_statement','rules.py',154),
  ('statement -> while_statement','statement',1,'p_statement','rules.py',155),
  ('statement -> repeat_statement','statement',1,'p_statement','rules.py',156),
  ('statement -> for_statement','statement',1,'p_statement','rules.py',157),
  ('statement -> procedure_or_function_call','statement',1,'p_statement','rules.py',158),
  ('statement -> <empty>','statement',0,'p_statement','rules.py',159),
  ('procedure_or_function_call -> identifier LPAREN param_list RPAREN','procedure_or_function_call',4,'p_procedure_or_function_call','rules.py',166),
  ('procedure_or_function_call -> identifier','procedure_or_function_call',1,'p_procedure_or_function_call','rules.py',167),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','rules.py',176),
  ('param_list -> param','param_list',1,'p_param_list','rules.py',177),
  ('param -> expression','param',1,'p_param','rules.py',185),
  ('if_statement -> IF expression THEN statement ELSE statement ENDIF','if_statement',7,'p_if_statement','rules.py',190),
  ('if_statement -> IF expression THEN statement ELSIF statement ENDIF','if_statement',7,'p_if_statement','rules.py',191),
  ('if_statement -> IF expression THEN statement ENDIF','if_statement',5,'p_if_statement','rules.py',192),
  ('while_statement -> WHILE expression LOOP statement ENDLOOP','while_statement',5,'p_while_statement','rules.py',202),
  ('repeat_statement -> REPEAT statement UNTIL expression','repeat_statement',4,'p_repeat_statement','rules.py',207),
  ('for_statement -> FOR assignment_statement TO expression LOOP statement ENDLOOP','for_statement',7,'p_for_statement','rules.py',212),
  ('for_statement -> FOR assignment_statement DOWNTO expression LOOP statement ENDLOOP','for_statement',7,'p_for_statement','rules.py',213),
  ('assignment_statement -> identifier COLEQ expression','assignment_statement',3,'p_assignment_statement','rules.py',219),
  ('expression -> expression and_or expression_m','expression',3,'p_expression','rules.py',224),
  ('expression -> expression_m','expression',1,'p_expression','rules.py',225),
  ('expression_m -> expression_s','expression_m',1,'p_expression_m','rules.py',234),
  ('expression_m -> expression_m sign expression_s','expression_m',3,'p_expression_m','rules.py',235),
  ('expression_s -> element','expression_s',1,'p_expression_s','rules.py',243),
  ('expression_s -> expression_s psign element','expression_s',3,'p_expression_s','rules.py',244),
  ('and_or -> AND','and_or',1,'p_and_or','rules.py',252),
  ('and_or -> OR','and_or',1,'p_and_or','rules.py',253),
  ('psign -> TIMES','psign',1,'p_psign','rules.py',258),
  ('psign -> DIV','psign',1,'p_psign','rules.py',259),
  ('sign -> PLUS','sign',1,'p_sign','rules.py',264),
  ('sign -> MINUS','sign',1,'p_sign','rules.py',265),
  ('sign -> EQ','sign',1,'p_sign','rules.py',266),
  ('sign -> NE','sign',1,'p_sign','rules.py',267),
  ('sign -> LT','sign',1,'p_sign','rules.py',268),
  ('sign -> LE','sign',1,'p_sign','rules.py',269),
  ('sign -> GT','sign',1,'p_sign','rules.py',270),
  ('sign -> GE','sign',1,'p_sign','rules.py',271),
  ('element -> identifier','element',1,'p_element','rules.py',277),
  ('element -> integer','element',1,'p_element','rules.py',278),
  ('element -> string','element',1,'p_element','rules.py',279),
  ('element -> char','element',1,'p_element','rules.py',280),
  ('element -> LPAREN expression RPAREN','element',3,'p_element','rules.py',281),
  ('element -> NOT element','element',2,'p_element','rules.py',282),
  ('identifier -> ID','identifier',1,'p_identifier','rules.py',295),
  ('integer -> ICONST','integer',1,'p_integer','rules.py',300),
  ('string -> SCONST','string',1,'p_string','rules.py',305),
  ('char -> CCONST','char',1,'p_char','rules.py',310),
]
